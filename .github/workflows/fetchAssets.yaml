name: Fetch Assets

on:
  schedule:
    - cron: '0 0 * * 1'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  fetch-and-commit-assets:
    runs-on: ubuntu-latest

    env:
      REQUIRED_ASSETS: |
        Rules.zip
        libmathcat_py-32-3.11-win.zip
      RELEASE_URL: https://api.github.com/repos/NSoiffer/MathCATForPython/releases/latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Delete previously downloaded assets
        run: rm -rf assets/*
      - name: Download assets
        run: |
          echo "REQUIRED_ASSETS=$REQUIRED_ASSETS"
          release_data=$(curl -s -H 'Accept: application/vnd.github.v3+json' "$RELEASE_URL")

          if [[ ! -d assets ]] ; then
            echo 'Directory "assets" does not exist. Creating it.'
            mkdir assets
          else
            echo 'Directory "assets" exists.'
          fi

          while IFS= read -r asset_name; do
            if [[ "$asset_name" =~ ^[[:space:]]*$ ]]; then
              continue
            fi
            echo "asset_name=$asset_name"
            asset_url=$(echo "$release_data" | jq -r ".assets[] | select(.name == \"$asset_name\") | .url")
            if [[ "$asset_url" != "null" ]]; then
              echo "Downloading $asset_name"
              curl -L -H "Accept: application/octet-stream" -o "$asset_name" "$asset_url"
            else
              echo "Asset $asset_name not found in the latest release."
              exit 1
            fi
            unzip -o "$asset_name" -d assets
            rm -f "$asset_name"
          done <<< "$REQUIRED_ASSETS"
      - name: Commit and push downloaded assets
        run: |
          git add assets
          git diff --cached --quiet && echo "No changes to commit" && exit 0
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git commit -m "Add downloaded assets"
          git push
      - name: Create issue in nvda repo using gh
        env:
          GH_TOKEN: ${{ secrets.NVDA_ISSUE_TOKEN }}
        run: |
          git diff --cached --quiet && echo "No asset changes; skipping issue creation." && exit 0

          gh issue create \
            --repo nvaccess/nvda \
            --title "Reminder: Asset updates may be needed" \
            --body "Assets were updated in the `nvda-mathcat` repo. Please verify and update the `nvda-mathcat` submodule if needed." \
            --label "automation"
